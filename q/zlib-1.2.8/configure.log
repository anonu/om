--------------------
./configure
Thu May 12 00:08:53 UTC 2016
Checking for gcc...
=== ztest13017.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13017.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13017.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13017.c

Checking for shared library support...
=== ztest13017.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13017.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13017.so ztest13017.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13017.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13017.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13017.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13017 ztest13017.c
Checking for strerror... Yes.

=== ztest13017.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13017.c
Checking for unistd.h... Yes.

=== ztest13017.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13017.c
Checking for stdarg.h... Yes.

=== ztest13017.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13017.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13017.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13017 ztest13017.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13017.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13017.c
Checking for return value of vsnprintf()... Yes.

=== ztest13017.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13017.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure --build=i686-pc-linux-gnu CFLAGS=-m32 CXXFLAGS=-m32 LDFLAGS=-m32
Thu May 12 00:11:34 UTC 2016
unknown option: --build=i686-pc-linux-gnu
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure CFLAGS=-m32 CXXFLAGS=-m32 LDFLAGS=-m32
Thu May 12 00:11:49 UTC 2016
unknown option: CFLAGS=-m32
./configure --help for help
** ./configure aborting.
--------------------


--------------------
./configure
Thu May 12 00:11:54 UTC 2016
Checking for gcc...
=== ztest13670.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13670.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13670.c ===
int foo() { return 0; }
===
gcc -c -O3 ztest13670.c

Checking for shared library support...
=== ztest13670.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -O3 -fPIC ztest13670.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -O3 -fPIC -o ztest13670.so ztest13670.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest13670.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13670.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest13670.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13670 ztest13670.c
Checking for strerror... Yes.

=== ztest13670.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13670.c
Checking for unistd.h... Yes.

=== ztest13670.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13670.c
Checking for stdarg.h... Yes.

=== ztest13670.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13670.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest13670.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -O3 -D_LARGEFILE64_SOURCE=1 -o ztest13670 ztest13670.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest13670.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13670.c
Checking for return value of vsnprintf()... Yes.

=== ztest13670.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -O3 -D_LARGEFILE64_SOURCE=1 ztest13670.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -O3 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -O3 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Thu May 12 00:12:18 UTC 2016
Checking for gcc...
=== ztest13795.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest13795.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest13795.c ===
int foo() { return 0; }
===
gcc -c -m32 ztest13795.c

Checking for shared library support...
=== ztest13795.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -m32 -fPIC ztest13795.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -m32 -fPIC -o ztest13795.so ztest13795.o
/usr/bin/ld: cannot find crti.o: No such file or directory
/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/4.8/libgcc.a when searching for -lgcc
/usr/bin/ld: cannot find -lgcc
/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/4.8/libgcc_s.so when searching for -lgcc_s
/usr/bin/ld: cannot find -lgcc_s
/usr/bin/ld: cannot find -lc
/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/4.8/libgcc.a when searching for -lgcc
/usr/bin/ld: cannot find -lgcc
/usr/bin/ld: skipping incompatible /usr/lib/gcc/x86_64-linux-gnu/4.8/libgcc_s.so when searching for -lgcc_s
/usr/bin/ld: cannot find -lgcc_s
/usr/bin/ld: cannot find crtn.o: No such file or directory
collect2: error: ld returned 1 exit status
(exit code 1)
No shared library support; try without defining CC and CFLAGS
Building static library libz.a version 1.2.8 with gcc.

=== ztest13795.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -m32 -D_LARGEFILE64_SOURCE=1 ztest13795.c
ztest13795.c:1:23: fatal error: sys/types.h: No such file or directory
 #include <sys/types.h>
                       ^
compilation terminated.
(exit code 1)
Checking for off64_t... No.

=== ztest13795.c ===
#include <stdio.h>
int main(void) {
  fseeko(NULL, 0, 0);
  return 0;
}
===
gcc -m32 -o ztest13795 ztest13795.c
In file included from /usr/include/stdio.h:27:0,
                 from ztest13795.c:1:
/usr/include/features.h:374:25: fatal error: sys/cdefs.h: No such file or directory
 #  include <sys/cdefs.h>
                         ^
compilation terminated.
(exit code 1)
Checking for fseeko... No.

=== ztest13795.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -m32 -DNO_FSEEKO -o ztest13795 ztest13795.c
In file included from /usr/include/string.h:25:0,
                 from ztest13795.c:1:
/usr/include/features.h:374:25: fatal error: sys/cdefs.h: No such file or directory
 #  include <sys/cdefs.h>
                         ^
compilation terminated.
(exit code 1)
Checking for strerror... No.

=== ztest13795.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -m32 -DNO_FSEEKO -DNO_STRERROR ztest13795.c
In file included from /usr/include/unistd.h:25:0,
                 from ztest13795.c:1:
/usr/include/features.h:374:25: fatal error: sys/cdefs.h: No such file or directory
 #  include <sys/cdefs.h>
                         ^
compilation terminated.
(exit code 1)
Checking for unistd.h... No.

=== ztest13795.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -m32 -DNO_FSEEKO -DNO_STRERROR ztest13795.c
Checking for stdarg.h... Yes.

=== ztest13795.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -m32 -DNO_FSEEKO -DNO_STRERROR ztest13795.c
In file included from /usr/include/stdio.h:27:0,
                 from ztest13795.c:1:
/usr/include/features.h:374:25: fatal error: sys/cdefs.h: No such file or directory
 #  include <sys/cdefs.h>
                         ^
compilation terminated.
(exit code 1)
Checking whether to use vs[n]printf() or s[n]printf()... using s[n]printf().

=== ztest13795.c ===
#include <stdio.h>
int mytest()
{
  char buf[20];
  snprintf(buf, sizeof(buf), "%s", "foo");
  return 0;
}
int main()
{
  return (mytest());
}
===
gcc -m32 -DNO_FSEEKO -DNO_STRERROR -o ztest13795 ztest13795.c
In file included from /usr/include/stdio.h:27:0,
                 from ztest13795.c:1:
/usr/include/features.h:374:25: fatal error: sys/cdefs.h: No such file or directory
 #  include <sys/cdefs.h>
                         ^
compilation terminated.
(exit code 1)
Checking for snprintf() in stdio.h... No.
  WARNING: snprintf() not found, falling back to sprintf(). zlib
  can build but will be open to possible buffer-overflow security
  vulnerabilities.

=== ztest13795.c ===
#include <stdio.h>
int mytest()
{
  char buf[20];
  return sprintf(buf, "%s", "foo");
}
int main()
{
  return (mytest());
}
===
gcc -c -m32 -DNO_FSEEKO -DNO_STRERROR -DNO_snprintf ztest13795.c
In file included from /usr/include/stdio.h:27:0,
                 from ztest13795.c:1:
/usr/include/features.h:374:25: fatal error: sys/cdefs.h: No such file or directory
 #  include <sys/cdefs.h>
                         ^
compilation terminated.
(exit code 1)
Checking for return value of sprintf()... No.
  WARNING: apparently sprintf() does not return a value. zlib
  can build but will be open to possible string-format security
  vulnerabilities.

=== ztest13795.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -m32 -DNO_FSEEKO -DNO_STRERROR -DNO_snprintf -DHAS_sprintf_void ztest13795.c
Checking for attribute(visibility) support... Yes.

ALL = static
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -m32 -DNO_FSEEKO -DNO_STRERROR -DNO_snprintf -DHAS_sprintf_void -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -m32 -fPIC -DNO_FSEEKO -DNO_STRERROR -DNO_snprintf -DHAS_sprintf_void -DHAVE_HIDDEN
SHAREDLIB =
SHAREDLIBM =
SHAREDLIBV =
STATICLIB = libz.a
TEST = all teststatic
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


--------------------
./configure
Thu May 12 00:13:46 UTC 2016
Checking for gcc...
=== ztest14220.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -c ztest14220.c
... using gcc

Checking for obsessive-compulsive compiler options...
=== ztest14220.c ===
int foo() { return 0; }
===
gcc -c -m32 ztest14220.c

Checking for shared library support...
=== ztest14220.c ===
extern int getchar();
int hello() {return getchar();}
===
gcc -w -c -m32 -fPIC ztest14220.c
gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map -m32 -fPIC -o ztest14220.so ztest14220.o
Building shared library libz.so.1.2.8 with gcc.

=== ztest14220.c ===
#include <sys/types.h>
off64_t dummy = 0;
===
gcc -c -m32 -D_LARGEFILE64_SOURCE=1 ztest14220.c
Checking for off64_t... Yes.
Checking for fseeko... Yes.

=== ztest14220.c ===
#include <string.h>
#include <errno.h>
int main() { return strlen(strerror(errno)); }
===
gcc -m32 -D_LARGEFILE64_SOURCE=1 -o ztest14220 ztest14220.c
Checking for strerror... Yes.

=== ztest14220.c ===
#include <unistd.h>
int main() { return 0; }
===
gcc -c -m32 -D_LARGEFILE64_SOURCE=1 ztest14220.c
Checking for unistd.h... Yes.

=== ztest14220.c ===
#include <stdarg.h>
int main() { return 0; }
===
gcc -c -m32 -D_LARGEFILE64_SOURCE=1 ztest14220.c
Checking for stdarg.h... Yes.

=== ztest14220.c ===
#include <stdio.h>
#include <stdarg.h>
#include "zconf.h"
int main()
{
#ifndef STDC
  choke me
#endif
  return 0;
}
===
gcc -c -m32 -D_LARGEFILE64_SOURCE=1 ztest14220.c
Checking whether to use vs[n]printf() or s[n]printf()... using vs[n]printf().

=== ztest14220.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return 0;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -m32 -D_LARGEFILE64_SOURCE=1 -o ztest14220 ztest14220.c
Checking for vsnprintf() in stdio.h... Yes.

=== ztest14220.c ===
#include <stdio.h>
#include <stdarg.h>
int mytest(const char *fmt, ...)
{
  int n;
  char buf[20];
  va_list ap;
  va_start(ap, fmt);
  n = vsnprintf(buf, sizeof(buf), fmt, ap);
  va_end(ap);
  return n;
}
int main()
{
  return (mytest("Hello%d\n", 1));
}
===
gcc -c -m32 -D_LARGEFILE64_SOURCE=1 ztest14220.c
Checking for return value of vsnprintf()... Yes.

=== ztest14220.c ===
#define ZLIB_INTERNAL __attribute__((visibility ("hidden")))
int ZLIB_INTERNAL foo;
int main()
{
  return 0;
}
===
gcc -c -m32 -D_LARGEFILE64_SOURCE=1 ztest14220.c
Checking for attribute(visibility) support... Yes.

ALL = static shared all64
AR = ar
ARFLAGS = rc
CC = gcc
CFLAGS = -m32 -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
CPP = gcc -E
EXE =
LDCONFIG = ldconfig
LDFLAGS =
LDSHARED = gcc -shared -Wl,-soname,libz.so.1,--version-script,zlib.map
LDSHAREDLIBC = -lc
OBJC = $(OBJZ) $(OBJG)
PIC_OBJC = $(PIC_OBJZ) $(PIC_OBJG)
RANLIB = ranlib
SFLAGS = -m32 -fPIC -D_LARGEFILE64_SOURCE=1 -DHAVE_HIDDEN
SHAREDLIB = libz.so
SHAREDLIBM = libz.so.1
SHAREDLIBV = libz.so.1.2.8
STATICLIB = libz.a
TEST = all teststatic testshared test64
VER = 1.2.8
Z_U4 =
exec_prefix = ${prefix}
includedir = ${prefix}/include
libdir = ${exec_prefix}/lib
mandir = ${prefix}/share/man
prefix = /usr/local
sharedlibdir = ${libdir}
uname = Linux
--------------------


